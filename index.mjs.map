{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/append_array.js","../lib/append_typed_array.js","../lib/append_object.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array';\nimport isCollection from '@stdlib/assert-is-collection';\nimport isTypedArrayLike from '@stdlib/assert-is-typed-array-like';\nimport isInteger from '@stdlib/assert-is-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport appendArray from './append_array.js';\nimport appendObject from './append_object.js';\nimport appendTypedArray from './append_typed_array.js';\n\n\n// MAIN //\n\n/**\n* Adds elements from one collection to the end of another collection.\n*\n* @param {Collection} collection1 - collection\n* @param {Collection} collection2 - collection containing elements to add\n* @throws {TypeError} first argument must be either an array, typed array, or an array-like object\n* @throws {TypeError} second argument must be an array-like object\n* @returns {Collection} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( collection1, collection2 ) {\n\tif ( !isCollection( collection2 ) ) {\n\t\tthrow new TypeError( format( '0iE3A', collection2 ) );\n\t}\n\tif ( isArray( collection1 ) ) {\n\t\treturn appendArray( collection1, collection2 );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection1 ) ) {\n\t\treturn appendTypedArray( collection1, collection2 );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection1 !== null &&\n\t\ttypeof collection1 === 'object' &&\n\t\ttypeof collection1.length === 'number' &&\n\t\tisInteger( collection1.length ) &&\n\t\tcollection1.length >= 0\n\t) {\n\t\treturn appendObject( collection1, collection2 );\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.', collection1 ) );\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar i;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tarr.push( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ArrayBuffer from '@stdlib/array-buffer';\nimport ceil2 from '@stdlib/math-base-special-ceil2'; // TODO: nextpow2\n\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is followed by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\ttotal = nbytes + ibytes + arr.byteOffset;\n\n\tif ( arr.buffer.byteLength < total ) {\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\tv = new arr.constructor( buf, 0, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i ] = arr[ i ];\n\t\t}\n\t} else {\n\t\tv = new arr.constructor( arr.buffer, arr.byteOffset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ len+i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nexport default append;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {ArrayLike} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = append( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 1.0, '1': 2.0, '2': 3.0, '3': 4.0 }\n*/\nfunction append( obj, items ) {\n\tvar len;\n\tvar i;\n\tlen = obj.length;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tobj[ len+i ] = items[ i ];\n\t}\n\tobj.length = len + items.length;\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nexport default append;\n"],"names":["append","collection1","collection2","isCollection","TypeError","format","isArray","arr","items","i","length","push","appendArray","isTypedArrayLike","total","len","buf","n","v","BYTES_PER_ELEMENT","byteOffset","buffer","byteLength","ArrayBuffer","ceil2","constructor","appendTypedArray","isInteger","obj","appendObject"],"mappings":";;0mBAwDA,SAASA,EAAQC,EAAaC,GAC7B,IAAMC,EAAcD,GACnB,MAAM,IAAIE,UAAWC,EAAQ,QAASH,IAEvC,GAAKI,EAASL,GACb,OCzBF,SAAiBM,EAAKC,GACrB,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC9BF,EAAII,KAAMH,EAAOC,IAElB,OAAOF,CACR,CDmBSK,CAAaX,EAAaC,GAGlC,GAAKW,EAAkBZ,GACtB,OEfF,SAAiBM,EAAKC,GACrB,IAEIM,EACAC,EACAC,EACAC,EACAC,EACAT,EASJ,GAPAM,EAAMR,EAAIG,OACVO,EAAIT,EAAME,OAIVI,EAFSC,EAAMR,EAAIY,kBACVF,EAAIV,EAAIY,kBACSZ,EAAIa,WAEzBb,EAAIc,OAAOC,WAAaR,EAG5B,IAFAE,EAAM,IAAIO,EAAaC,EAAOV,EAAM,IACpCI,EAAI,IAAIX,EAAIkB,YAAaT,EAAK,EAAGD,EAAIE,GAC/BR,EAAI,EAAGA,EAAIM,EAAKN,IACrBS,EAAGT,GAAMF,EAAKE,QAGfS,EAAI,IAAIX,EAAIkB,YAAalB,EAAIc,OAAQd,EAAIa,WAAYL,EAAIE,GAE1D,IAAMR,EAAI,EAAGA,EAAIQ,EAAGR,IACnBS,EAAGH,EAAIN,GAAMD,EAAOC,GAErB,OAAOS,CACR,CFfSQ,CAAkBzB,EAAaC,GAGvC,GACiB,OAAhBD,GACuB,iBAAhBA,GACuB,iBAAvBA,EAAYS,QACnBiB,EAAW1B,EAAYS,SACvBT,EAAYS,QAAU,EAEtB,OGnCF,SAAiBkB,EAAKpB,GACrB,IAAIO,EACAN,EAEJ,IADAM,EAAMa,EAAIlB,OACJD,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC9BmB,EAAKb,EAAIN,GAAMD,EAAOC,GAGvB,OADAmB,EAAIlB,OAASK,EAAMP,EAAME,OAClBkB,CACR,CH0BSC,CAAc5B,EAAaC,GAEnC,MAAM,IAAIE,UAAWC,EAAQ,+GAAgHJ,GAC9I"}