// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/array-buffer@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ceil2@v0.1.0-esm/index.mjs";function l(l,a){if(!t(a))throw new TypeError(n("invalid argument. Second argument must be an array-like object. Value: `%s`.",a));if(e(l))return function(e,t){var r;for(r=0;r<t.length;r++)e.push(t[r]);return e}(l,a);if(r(l))return function(e,t){var r,s,n,l,a,m;if(s=e.length,l=t.length,r=s*e.BYTES_PER_ELEMENT+l*e.BYTES_PER_ELEMENT+e.byteOffset,e.buffer.byteLength<r)for(n=new i(o(r+1)),a=new e.constructor(n,0,s+l),m=0;m<s;m++)a[m]=e[m];else a=new e.constructor(e.buffer,e.byteOffset,s+l);for(m=0;m<l;m++)a[s+m]=t[m];return a}(l,a);if(null!==l&&"object"==typeof l&&"number"==typeof l.length&&s(l.length)&&l.length>=0)return function(e,t){var r,s;for(r=e.length,s=0;s<t.length;s++)e[r+s]=t[s];return e.length=r+t.length,e}(l,a);throw new TypeError(n("invalid argument. First argument must be either an array, typed array, or an array-like object. Value: `%s`.",l))}export{l as default};
//# sourceMappingURL=index.mjs.map
